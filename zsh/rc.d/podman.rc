#!/bin/zsh

# This was pulled from the functions and alias files.
podman-build() {
 echo "Image: ${1}"
 echo "$(pwd | awk -F'/' '{print $NF}')"
 # Generic podman build use the `.arg` file to set params
 ARG_FILE=".arg"
 # file does not exists
 if [ ! -f "$ARG_FILE" ]; then
   touch "$ARG_FILE"
 fi
 echo "----------------------------------------"
 _CMD="podman build --build-arg-file '$ARG_FILE' \
  --file Containerfile \
  --tag '${1}:dev' \
  ."
 echo "${_CMD}"
 eval "${_CMD}"
 unset _CMD
}

podman-run() {
 # Generic podman build use the `.arg` file to set params
 ENV_FILE=".env"
 # file does not exists
 if [ ! -f "$ENV_FILE" ]; then
    touch "$ENV_FILE"
 fi
 _CMD="podman run \
 --env-file '${ENV_FILE}' \
 --detach \
 --name '${1}' \
 --publish 8080:8080 \
 --rm \
 --volume Data:/mnt/volumes/container \
 --volume Configmaps:/mnt/volumes/configmaps \
 --volume Secrets:/mnt/volumes/secrets \
 '${1}:dev' /bin/sh"
 echo "${_CMD}"
 eval "${_CMD}"
 unset _CMD
}
# --volume Secrets:/mnt/volumes/secrets \

podman-exec() {
 _CMD="podman exec \
 --interactive \
 --tty \
 '${1}' /bin/sh"
 echo "${_CMD}"
 eval "${_CMD}"
 unset _CMD
}


# [p...] Podman **NOTE**: Clients
alias pb="podman-build $(pwd | awk -F'/' '{print $NF}')"
alias pc="podman rmi --force --all"
alias pr="podman-run $(pwd | awk -F'/' '{print $NF}')"
alias pe="podman-exec $(pwd | awk -F'/' '{print $NF}')"
